
'use server';
/**
 * @fileOverview A financial advisor AI agent.
 *
 * - getFinancialAdvice - A function that provides financial advice based on recent transactions.
 * - FinancialAdviceInput - The input type for the getFinancialAdvice function.
 * - FinancialAdviceOutput - The return type for the getFinancialAdvice function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const TransactionSchema = z.object({
  title: z.string().describe('The title or description of the transaction.'),
  type: z.enum(['income', 'expense']).describe('The type of transaction.'),
  amount: z.number().describe('The amount of the transaction.'),
  category: z.string().describe('The category of the transaction.'),
});

const FinancialAdviceInputSchema = z.object({
  transactions: z.array(TransactionSchema).describe('A list of recent transactions.'),
  userName: z.string().optional().describe('The name of the user, for personalization.'),
});
export type FinancialAdviceInput = z.infer<typeof FinancialAdviceInputSchema>;

const FinancialAdviceOutputSchema = z.object({
  advice: z.string().describe('The financial advice or summary generated by the AI.'),
});
export type FinancialAdviceOutput = z.infer<typeof FinancialAdviceOutputSchema>;

export async function getFinancialAdvice(input: FinancialAdviceInput): Promise<FinancialAdviceOutput> {
  return financialAdvisorFlow(input);
}

const prompt = ai.definePrompt({
  name: 'financialAdvisorPrompt',
  input: {schema: FinancialAdviceInputSchema},
  output: {schema: FinancialAdviceOutputSchema},
  prompt: `You are a friendly and helpful AI Financial Advisor for an app called Saverly.
Your goal is to provide concise and actionable financial advice based on the user's recent transactions.
You MUST provide your advice in Bengali (Bangla) language.
{{#if userName}}Address the user as {{userName}}.{{/if}}

{{#if transactions}}
Here are the recent transactions:
{{#each transactions}}
- {{title}} ({{type}}): \${{amount}} (Category: {{category}})
{{/each}}

Based on these transactions, provide 1-2 sentences of personalized financial insight or a suggestion in Bengali (Bangla).
Focus on spending patterns, saving opportunities, or acknowledging good financial behavior.
{{else}}
There are no recent transactions to analyze. You can encourage the user to start tracking their finances with Saverly to get personalized advice, in Bengali (Bangla).
{{/if}}
Keep it brief and encouraging.
For example: "আমি দেখছি আপনি [বিভাগ]-এ খরচ করছেন। এখানে সাশ্রয়ের উপায় খুঁজতে পারেন?" or "দারুণ! [বিভাগ]-এ ভালো সাশ্রয় করেছেন!" or "ব্যক্তিগত পরামর্শ পেতে আপনার লেনদেন যোগ করা শুরু করুন!"
`,
});

const financialAdvisorFlow = ai.defineFlow(
  {
    name: 'financialAdvisorFlow',
    inputSchema: FinancialAdviceInputSchema,
    outputSchema: FinancialAdviceOutputSchema,
  },
  async (input) => {
    const {output} = await prompt(input);
    if (!output) {
      throw new Error('Failed to get financial advice from AI.');
    }
    return output;
  }
);

